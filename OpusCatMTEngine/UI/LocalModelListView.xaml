<UserControl x:Class="OpusCatMTEngine.LocalModelListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:OpusCatMTEngine"
             xmlns:resx="clr-namespace:OpusCatMTEngine.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="1000">
    <UserControl.Resources>
        <local:EnumToStringConverter x:Key="DefaultEnumToStringConverter"/>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        <local:BooleanAndConverter x:Key="booleanAndConverter" />
        <local:InverseBooleanConverter x:Key="booleanNotConverter" />
        <local:BooleanAndToVisibilityConverter x:Key="booleanAndToVisibilityConverter" />
    </UserControl.Resources>
    <Border BorderBrush="Black" BorderThickness="1" Margin="5">
        <StackPanel>
            <Label Margin="10,0,0,0" FontSize="20">Installed models</Label>
            <DockPanel Margin="10,10,10.333,10">
                <StackPanel DockPanel.Dock="Right" Margin="10,0">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="0,0,0,5" />
                        </Style>
                    </StackPanel.Resources>
                    <Border
                        BorderBrush="Black" BorderThickness="1"
                        Visibility="{Binding OverrideModelSet, Converter={StaticResource VisibleIfTrueConverter}, FallbackValue=Collapsed}">
                        <StackPanel Margin="5">
                            <Label>Override model target language</Label>
                        <ComboBox ItemsSource="{Binding Path=OverrideModel.TargetLanguages, Mode=TwoWay}"
                            DisplayMemberPath="IsoRefName"
                            SelectedValue="{Binding OverrideModelTargetLanguage, Mode=TwoWay}"
                            Width="200"/>
                            <Button 
                        Name="cancelOverride"
                        Click="btnCancelOverride_Click"
                        Content="{x:Static resx:Resources.Main_CancelOverrideButton}"/>
                        </StackPanel>
                    </Border>
                    <Button Name="addOnlineModel" Click="btnAddOnlineModel_Click" Content="{x:Static resx:Resources.Main_InstallFromWebButton}" />
                    <Button Name="addZipModel" Click="btnAddZipModel_Click" Content="{x:Static resx:Resources.Main_InstallFromZipButton}" />
                    <Button Name="customizeModel" Click="btnCustomizeModel_Click" Content="{x:Static resx:Resources.Main_FinetuneButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.IsReady"/>
                        </Button.Visibility>
                    </Button>
                    <Button Name="continueCustomization" Click="btnContinueCustomization_Click" Content="{x:Static resx:Resources.Main_ContinueFinetuneButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.CanContinueFinetuning"/>
                        </Button.Visibility>
                    </Button>
                    <Button Name="customizationProgress" Click="btnCustomizationProgress_Click"
                            Content="{x:Static resx:Resources.Main_CustomizationProgressButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.HasProgress"/>
                        </Button.Visibility>
                    </Button>
                    <Button Name="packageCustomModel" Click="btnpackageCustomModel_Click"
                            Content="{x:Static resx:Resources.Main_PackageModelButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.CanPackage"/>
                        </Button.Visibility>
                    </Button>
                    <Button Name="deleteModel" Click="btnDeleteModel_Click"
                            Content="{x:Static resx:Resources.Main_DeleteModelButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.CanDelete"/>
                        </Button.Visibility>
                    </Button>
                    <Button Name="translateWithModel" Click="btnTranslateWithModel_Click"
                            Content="{x:Static resx:Resources.Main_TranslateWithModelButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.CanTranslate"/>
                        </Button.Visibility>
                    </Button>
                    <!--
                    <Button Name="openModelInOverlay" Click="btnOpenModelInOverlay_Click"
                            Content="{x:Static resx:Resources.OpenModelInOverlayButton}">
                        <Button.Visibility>
                            <Binding 
                                Converter="{StaticResource VisibleIfTrueConverter}" 
                                FallbackValue="Collapsed" 
                                ElementName="LocalModelList" 
                                Path="SelectedItem.CanTranslate"/>
                        </Button.Visibility>
                    </Button>-->
                    <!-- This is disabled until the testing functionalities can be polished a bit more
                        <Button IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItem.IsReady}" Name="testModel" Click="btnTestModel_Click">Test model</Button>
                    -->
                    <Button
                        Visibility="Collapsed"
                        IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItems.Count}" 
                        Name="evaluateModels" 
                        Click="btnEvaluateModels_Click"
                        Content="{x:Static resx:Resources.Main_EvaluateModelsButton}" />
                    <Button 
                            IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItems.Count}" 
                            Name="addModelTag" 
                            Click="btnEditModelTags_Click"
                            Content="{x:Static resx:Resources.Main_EditModelTagsButton}" />
                    <Button 
                            IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItems.Count}" 
                            Name="editRules" 
                            Click="EditRules_Click"
                            Content="{x:Static resx:Resources.Main_EditRulesButton}" />
                    <Button 
                            Visibility="{Binding ElementName=LocalModelList, Path=SelectedItem.SupportsTerminology, Converter={StaticResource VisibleIfTrueConverter}, FallbackValue=Collapsed}"
                            IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItems.Count}" 
                            Name="termList" 
                            Click="TermList_Click"
                            Content="{x:Static resx:Resources.Main_TermListButton}" />
                    <Button 
                        IsEnabled="{Binding ElementName=LocalModelList, Path=SelectedItems.Count}"
                        Name="openModelDir"
                        Click="btnOpenModelDir_Click"
                        Content="{x:Static resx:Resources.Main_OpenModelDirButton}"/>
                    <Button 
                        Visibility="{Binding ElementName=LocalModelList, Path=SelectedItem.CanSetAsOverrideModel, Converter={StaticResource VisibleIfTrueConverter}, FallbackValue=Collapsed}" 
                        Name="setAsOverride"
                        Click="btnSetOverride_Click"
                        Content="{x:Static resx:Resources.Main_SetAsOverrideModelButton}"/>
                </StackPanel>
                <ListView 
                    Name="LocalModelList" 
                    Height="500" 
                    ItemsSource="{Binding Path=LocalModels, Mode=TwoWay}" 
                    SelectionMode="Extended"
                    GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1,1,1,1" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOverrideModel}" Value="true">
                                    <Setter Property="BorderBrush" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOverridden}" Value="true">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Model Information">
                            <GridViewColumn DisplayMemberBinding="{Binding Path=SourceLanguageString, Mode=OneWay}" Header="Source languages" Width="100"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=TargetLanguageString, Mode=OneWay}" Header="Target languages" Width="100" />
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Name, Mode=OneWay}" Header="Model name" Width="200"/>
                            
                            <GridViewColumn Width="220" Header="Status">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <ProgressBar Width="220" Maximum="100" Value="{Binding Path=StatusProgress, Mode=OneWay}"/>
                                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=StatusAndEstimateString, Mode=OneWay}"/>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="60" Header="Prioritized">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=Prioritized, Mode=TwoWay}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>
            </DockPanel>
        </StackPanel>
    </Border>
</UserControl>
